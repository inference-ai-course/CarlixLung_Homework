Requirement Formalisation using Natural Language Processing and
Machine Learning: A Systematic Review

Shekoufeh Kolahdouz-Rahimi'®*, kevin Lano*® and Chenghua Lin? &
'School of Computing, University of Roehampton, London, UK

2 Department of Informatics, King’s College London, London, UK
3 Department of Computer Science, University of Sheffield, UK

shekoufeh.rahimi@roehampton.ac.uk, kevin.lano@kcl.ac.uk, c.lin@sheffield.ac.uk

Keywords:
Requirements Engineering, Requirement Formalisation, Natural Language Processing, Machine Learning,
Deep Learning, Systematic Mapping Study.

Abstract:

Improvement of software development methodologies attracts developers to automatic Requirement Formal-
isation (RF) in the Requirement Engineering (RE) field. The potential advantages by applying Natural Lan-
guage Processing (NLP) and Machine Learning (ML) in reducing the ambiguity and incompleteness of re-
quirement written in natural languages is reported in different studies. The goal of this paper is to survey and
classify existing work on NLP and ML for RF, identifying challenges in this domain and providing promising
future research directions. To achieve this, we conducted a systematic literature review to outline the current
state-of-the-art of NLP and ML techniques in RF by selecting 257 papers from common used libraries. The
search result is filtered by defining inclusion and exclusion criteria and 47 relevant studies between 2012 and
2022 are selected. We found that heuristic NLP approaches are the most common NLP techniques used for
automatic RF, primary operating on structured and semi-structured data. This study also revealed that Deep
Learning (DL) technique are not widely used, instead classical ML techniques are predominant in the surveyed
studies. More importantly, we identified the difficulty of comparing the performance of different approaches
due to the lack of standard benchmark cases for RF.

1 INTRODUCTION

Productive management of Requirement Engineer-
ing (RE) accelerates the process of software de-
velopment. Requirement Formalisation (RF) re-
lates to the process of transforming requirement
in natural language to specific formal notations
by removing ambiguities. Formal specification
of requirement is applicable in different stages of
software development specially in the validation
phase. Manual formalisation of natural language
requirements is an error-prone and time consum-
ing task and infeasible for complex systems (Zaki-
Ismail et al., 2021). To this end many automatic
and semi-automatic approaches have been intro-
duced to formalise requirement by applying Nat-
ural Language processing (NLP) techniques (Rol-
land and Proix, 1992; Ryan, 1993). Addition-

4 https://orcid.org/0000-0002-0566-5429
© https://orcid.org/0000-0002-9706-1410
© https://orcid.org/0000-0003-3454-2468

ally, leveraging Machine Learning (ML) and Deep
Learning (DL) techniques in this domain push the
research field forward.

In the last decade, there has been a noticeable
increase in the number of papers using NLP and
ML techniques for RF. Each research applied par-
ticular technique and mostly there is no compre-
hensive guidelines for the reason of applying those
techniques. A large number of research reviews
have been carried out to survey this domain (Alza-
yed and Al-Hunaiyyan, 2021). To overcome the
limitations of existing studies, in this paper we
conducted a systematic mapping study of NLP and
ML approaches for RF considering the guidelines
presented by Kitchenham and Charters (Brereton
et al., 2007), (Keele et al., 2007), and Petersen
et al. (Petersen et al., 2015). We investigated 47
studies from an initial set of 257. The papers are
selected from commonly used libraries including
ACM Digital Library, IEEE Xplore, ScienceDi-
rect, Springer Link, and Scopus. The search result
is filtered by defining inclusion and exclusion cri-


teria to decide whether a publication found in the
search should be included in the study or excluded.
Three research questions were formulated for our
Systematic Literature Review (SLR). By answer-
ing these research questions, the state of the art of
RF is evaluated. We identify current challenges
of community and provide guidelines to address
those challenges. The actions that were taken by
the author of this paper as part of MDENet project
' are also discussed. Finally, for further maturity
of the research field, future research directions in
this area are provided.

The remainder of this paper is organised as
follows: In Section 2, related review papers in
RF using NLP and ML are summarised. Section
3, presents background information related to this
domain. The applied research method in this study
is described in Section 4. Section 5 outlines the
key findings of our study. Discussion on action
taken by the authors to address the challenges is
provided in Section 6. Finally, conclusion and fu-
ture direction of research are provided in Sections
7 and 8.

2 Related Work

A comprehensive survey in application of NLP to
RE is provided in (Zhao et al., 2020), by consid-
ering 404 works. This paper emphasise is on the
insufficient application of NLP techniques for RE
studies in industrial cases. Importantly, lack of
expertise in selecting appropriate NLP techniques
in RE domain is discussed. Although challenges
are introduced in this work, practical solutions are
not provided. Additionally, investigating ML tech-
niques in this domain is not the main focus of re-
search.

A survey in application of NLP techniques to
requirements in the form of user stories is pro-
vided in (Raharjana et al., 2021) and potential ad-
vantages of those techniques in RF domain is dis-
cussed. A comprehensive classification based on
the uses of NLP techniques for user stories is pro-
vided and a model is recognised as a common tar-
get for RF in the form of user stories. However,
ML techniques for RF are not considered in this
research and in general the main challenges of the
domain are not sufficiently discussed. Addition-
ally, input datasets for user stories in investigated
papers are not provided.

Yalla and Sharma (Yalla and Sharma, 2015)
survey the current literature that leverages RE and
NLP for different phases of software development.

'https://mde-network.com/

However, only limited future research direction
and guidelines are provided in this work. Se-
lected articles that generates UML diagram by ap-
plying NLP techniques are investigated in (Da-
wood et al., 2017; Abdelnabi et al., 2021). These
works emphasize on immaturity of research area
as most of the current processes are not automated.
Advantages and disadvantages of different studies
that generates UML diagram by applying heuristic
rules are identified in (Ahmed et al., 2022). This
work highlighted the noticeable application of ML
in this domain.

The are many related literature studies in the
RF domain. However the the challenges of the do-
main are not deeply recognized and guidelines for
addressing those challenges and clear research di-
rection are limited in most studies. This proves the
immaturity of the research area and its potential
for further improvement. Therefore, the main aim
of this research is to identify current challenges of
community by classifying applied techniques and
provide practical guidelines for addressing those
issues.

3 BACKGROUND

In this section, the related concepts to this research
including RE, NLP and DL are explained.

3.1 Requirement Engineering

RE is an important process in software develop-
ment for discovering stakeholders needs and clas-
sifying them for other phases of software devel-
opment (Pohl, 2010). Different challenges have
been identified in the RE phase. One of the un-
avoidable challenges in this domain is ambiguity
in natural language. This issue is the main focus
of many studies and various approaches have been
introduced to solve this problem. NLP is one of
the widely used technique that supports RE in this
dimension (Tukur et al., 2021; Zhao et al., 2020).

3.1.1 Requirement Formalisation

Formalising requirement is one of the key tasks in
RE that is automated by applying different NLP
and ML techniques and tools. It enables to trans-
late the requirement in natural language into a
structured formal form (e.g., UML modeling di-
agrams). This transformation reduces the ambigu-
ities of natural language and provides convenient
way for validation and verification (Scho'n et al.,
2017; Tukur et al., 2021).


3.2 Natural Language Processing

NLP is an area of research in Artificial Intelli-
gence (AI) that enables computer to process a large
amount of structured/unstructured data in natural
language that exist in today’s world. Different
NLP method, approach, process and procedure are
introduced to process data in different phases of
RE. Tokenization, POS tagging and dependency
parsing are the commonly used techniques in this
domain (Kulkarni and Shivananda, 2019).

3.3 Machine Learning

ML is one of the core technical terms in Artifi-
cial Intelligence (AI), which refers to the learning
and identification of patterns from examples and
existing data (Samuel, 1967). Different algorithms
and processing techniques are introduced in this
domain. ML is organised in three main types in-
cluding Supervised learning, Unsupervised learn-
ing and Reinforcement learning (Cepukenas et al.,
2015; Li et al., 2020). ML is used to solve var-
ious real world issues. Applying ML techniques
improves different RE tasks such as classification
and model extraction. A real word example of ap-
plication of ML is for RE.

DL is a ML technique, which is based on Ar-
tificial Neural Network (ANN) (Goodfellow et al.,
2016) and is applicable in variety of domains in-
cluding RF.

4 RESEARCH METHOD

The provided guidelines by Kitchenham and Char-
ters (Brereton et al., 2007), (Keele et al., 2007),
and Petersen et al. (Petersen et al., 2015) are
applied for systematic mapping study in this re-
search. The following research questions are the
main target of this research.

¢ QI: What are the most commonly used
NLP/ML approaches for automatic/semi-
automatic RF?

¢ Q2: What are the input and output of RF ap-
proaches?

* Q3: What are the gaps and deficiencies in ex-
isting RF work?

The three phases of study protocol including
planning, conducting and reporting are explained
in the following sections.

Table 1: Terms for Selecting Relevant Research Studies

Group Term

A Natural Language Processing
Natural Language, NLP

B Machine Learning
Deep Learning

C Requirement Formalisation
Model Generation
UML Generation
OCL Generation
Usecase or Use case Diagram Generation
Class Diagram Generation
Sequence Diagram Generation
ER Diagram Generation
Activity Diagram Generation

4.1 Review Planning

The review process and search strategy are ex-
plained in this part. To provide comprehensive
coverage of existing publication most major pub-
lishers in Software Engineering are investigated.
The following research libraries are used to find
the related studies for RF.

¢ ACM Digital Library (http://dl.acm.org)
IEEE Xplore (http://ieeexplore.ieece.
org)

ScienceDirect
sciencedirect.com)

(http://www.

Springer Link (http://www.springer.com)

Scopus (http://www.scopus.com)

According to the objectives of this study and
research questions three terms were selected in this
paper. Each term includes different keywords and
at least one of the keywords has to be presented in
a paper. Table | presents the list of selected terms
in this research.

To identify the largest number of studies in the
domain of RF, the following search string is fol-
lowed:

Search String= (A vBv (AAB)) AC

Additionally, inclusion and exclusion criteria
to decide which of the selected articles should
be considered as primary studies and which ones
should be excluded are defined as follows:

4.1.1 Inclusion Criteria

* Published between January 2012 and March
2022

* Publications that generate model or any for-
malisation from requirement

* Publications in peer-reviewed journals, confer-
ences, and workshops


¢ Publication in English
4.1.2 Exclusion Criteria

¢ Publications not written in English

* Publications before 2012

¢ Summary, survey, or review publications
¢ Non peer-reviewed publications

* Publications not focusing on RF

* Books, web sites, technical reports, pamphlets,
tutorials, duplicate papers, and white papers.

In this research abstracts, titles, and keywords
of papers are evaluated according to the inclu-
sion and exclusion criteria. Furthermore, for some
cases the whole text of the paper is also investi-
gated.

4.2. Review Conduction

The review conduction stage presents the selection
process for LR in this research.

4.2.1 Article selection:

This phase is divided into three sub tasks includ-
ing, pilot study, article selection and quality as-
sessment of selected primary studies.

Pilot study: A pilot study is carried out to in-
vestigate the reliability of provided selection crite-
ria as suggested by Kitchenham and Charters (Br-
ereton et al., 2007), (Keele et al., 2007), and Pe-
tersen et al. (Petersen et al., 2015) before selection
of primary articles. In this stage five papers are
selected by the first and second authors. These
articles are investigated by third author, who is
an expert in NLP domain and was not involved
by the search process by considering the inclusion
and exclusion criteria. A satisfactory result is pre-
sented from pilot study, which proves the suitabil-
ity of the defined criteria in this research.

Primary study selection: In this part, the
relevant articles are searched using the provided
search string. The result of this selection is pre-
sented in Figure 1. For the initial search process
257 results are recognised. To refine the selection
papers in the next iteration, titles, abstracts, key-
words, introduction and conclusion sections are re-
viewed. As a result 115 papers are removed from
the list of selection and then the rest are kept for the
next iteration. Following that by applying inclu-
sion and exclusion criteria 71 papers are rejected.
Next for this iteration, the content of the paper is
investigated deeply and 24 papers are rejected. Fi-
nally, 47 studies are remaining. Figure 3 presents

i

Initial Search

257 studies fund

Y
First Filtering
115 studies removed (Abstract, Title,
142 studies remained keywords, Intro,
Conclusion)

+

Applying
Inclusion/Exclusion

71 studies removed
71 studies remained oo.
Criteria

v

24 studies removed
47 studies remained

Detailed Filtering

e

Figure 1: Primary studies selection process

a Journal = Conference

Figure 2: Primary studies per publication type

the distribution of the resulting papers in each year.
As can be seen in this figure, in 2021 the domain
gained more interest and highest number of publi-
cation were published. Additionally, Figure 2 indi-
cates the publication type of result papers. Confer-
ence are the target of publication in most studies.

Quality Assessment: The quality of selected
study are also assessed in this research. Therefore,

10

9
is
7
6
5

4
3
2

20122013, «2014S 20152016. «= 2017S 2018 = 2019S 2020S 2021 = .2022

Figure 3: Distribution of NLP papers in each year


Table 2: Quality assessment Questions

Table 3: Data Extraction Form

QID | Topic Question Study data [Description Relevant RQ
Al | Objective Did the study clearly define Title Study
the research objectives? Overview
A2_ | Related Did the study provide a review Author Study
work of previous work? Overview
A3_ | Research Are the research methodology Year Study
methodology | clearly established? Overview
A4 | Validity Did the study include a Article Study
discussion on the validity and Source Overview
reliability of the procedure used? Type of Journal,
A5 | Future work | Did the study point out potential Article Conference
further research? Workshop
Research | What is the main RQI
. . . : goal goal of study?
a checklist with four quality assessment questions Research ~ |Model extraction/generation, [ROI
are presented in Table 2. The questions ate ais goal Requirement formalisation,
swered by the first author by selecting from ’yes’, category  |UML, Usecase, Class
*no’ and ’partly’ options. Activity, ER diagram
extraction/generation
4.2.2 Data Extraction and Synthesis Research —|What research methods RQI
method did the study employ?
To answer each research question, the data extrac- Data What are the datasets RQ2
tion process is performed by developing a prede- ___|for evaluation of the study
fined data extraction form in Table 3. The form Evaluation what are the evaluation RQI
bles us to record essential information of pri- uipanieain tne SAO
ena : P NLP What are the applied RQI
mary studies to answer each research question. techniques {NLP techniques?
The form is fill out by the first author manually and ML What are the applied ROI
then second and third authors reviewed the results techniques |ML techniques?
and finally the issues are fixed. NLP What NLP tools RQI
tools did the study use?
4.2.3 REPORTING THE REVIEW Challenges |What are the challenges RQ3
of the study?
Based on the results of data extraction phase, the Future Work|What are the suggested RQ3
review result is presented and each research ques- future work?

tion is answered and discussed.

5 RESULTS

This section presents the result of review in this
research. We selected 47 primary studies for SLR.

5.1 Summary of Studies

Selected studies for classifying NLP and ML tech-
niques to formalise requirement are presented in
Tables 4 and 5. Due to the lack of space, the
rest of the studies are available in (RFr, 2022).
The selected studies are summarise according to
the applied NLP/ML techniques, input and output
artifacts, datasets, approach, applied tools and li-
braries, input structure and evaluation criteria.

This section discusses the classification results
of the investigated approaches according to each
research question.

5.2. Q1: What are the most commonly
used NLP/ML approaches for
automatic/semi-automatic RF?

To answer this question, NLP and ML approaches
applied in selected studies are deeply investigated.

5.2.1 NLP techniques

Figure 4 presents the applied NLP techniques and
frequency of using those techniques through out
investigated papers.

¢ Applied techniques: Tokenization, POS tag-
ging and Type dependencies are the most com-
mon used NLP techniques in those research.

* Heuristic rules: Majority of research applied
heuristic rules for formalising requirements.

¢ Frequent tools and libraries: Stanford core
NLP is the most common-used NLP tools in
investigated studies.

¢ Evaluation criteria: Accuracy in terms of pre-
cision, recall and F-measure are the most com-


Figure 4: Frequency of NLP Technologies in Different
Studies

Figure 5: Frequency of DL Technologies in Different
Studies

mon criteria for evaluation in selected studies.
5.2.2 ML techniques

There are not many studies that apply ML tech-
niques for RF and mostly classical ML techniques
such as decision tree and Support Vector Machine
(SVM) are used in those studies. The applied ML
techiques and frequency of application of these
techniques are presented in Figure 5. Around 20%
of selected studies in this research applied both
NLP and DL techniques.

5.3. Q2: What are input and output of
RF approaches?

This question is answered according to the applied
type and structure of input elements, and generated
output elements.

¢ Input Types: The frequency of input types in
selected studies is presented in Figure 6. En-
glish text and user story are the most common-
used type in most studies.

¢ Input Structure: The unstructured English
text is the most frequent input structure for
most of the studies as presented in Figure 7.
The inputs in the format of user story are semi-
structured.

¥s A x iS +
ee s eo « RS < «é
5) ‘2 BY <
x ‘a Si s e Ns
o > oO x eo
CS wt & RS o ss AS
s ys e ee g &
@
s Bs
Aes we
Y oS

Figure 6: Frequency of Input for RF

@Unstructered mSemi-Structerd mStructured @

Figure 7: Structure of Input Elements

¢ Output Types: In most of studies the formali-
sation is in the form of UML diagrams. Figure
8 indicates that class and use case diagrams are
the most common input types in these studies.

5.4 Q3: What are the gaps and
deficiencies in existing RF work?

The RF field remains at an experimental stage,
in particular evaluation of approaches is not per-
formed in a systematic manner and it is difficult to
compare different approaches. The published re-
sults of studies were often not reproducible due to
unavailability of tools or data.

Investigating different works, we identified
three main deficiencies for formalising require-
ments. A list of deficiencies are provided below:

¢ F © S F SY SY © SY YY SF
¢ a g ¢ & & < Rs eo a Rs &
we SF SE Sh NM WW MW
SF FX LMF FHL SF SF C&S SS
Pe SS e SF < ae
Oye SF SF 6 & SS PS
ee s vd we
& cs x
g x ¢
& s
< <
< s
Se e
&
¥ s

Figure 8: Frequency of Generated Output for RF


5.4.1 Lack of Completeness in Heuristic rules

The performance and completeness of heuristic
approaches are typically not evaluated on a broad
range of input cases, thus it is not possible to de-
termine which are the best to use in different situa-
tions. A lot of papers applied heuristic approaches
and defined rules manually. It is not possible to
come up with any specific number of rules for for-
malising requirement and generating relevant arti-
facts. Therefore, the provided heuristic methods
in most approaches inevitably have some incom-
pleteness and may only work well for inputs re-
stricted to particular formats or linguistic styles.
This issue is not deeply investigated in the com-
munity as there is not adequate comparative eval-
uation in this domain.

5.4.2 Lack of application of DL

There is under-use of DL techniques, which seem
to be relevant and applicable to RF tasks and
could help to avoid the limitations of heuristic ap-
proaches, especially for unstructured source data.
It is assumed that the limited number of training
data in the community is the main reason that de-
velopers do not use DL models in different tasks.
Most of the learning methods used in the commu-
nity are standard methods such as decision tree or
regression model. It can be concluded that most of
the studies use learning in a wrong way and not ex-
ploit the full potential of deep learning techniques
in this domain. Therefore, in theory application of
ML provides a potential solution for different task
of RF.

Consequently, there is a lot of space in appli-
cation of ML and specially DL techniques to dif-
ferent tasks for RF to make it more mature than
being experimental. Systematic comparison of DL
and heuristic solutions would help to identify the
appropriate techniques for particular kinds of RF
tasks. Community can benefit from the DL mod-
els and tools by applying some modern learning
architecture such as OpenAI Codex (Chen et al.,
2021) as in these models it is not essential to have
lots of labels data for performing particular task.

5.4.3 Lack of Evaluation Benchmark
Framework

In order to systematically compare different RF
cases, standard benchmarks and evaluation criteria
need to be established e.g., there are well estab-
lished benchmarks in Natural Language Genera-
tion (Su et al., 2021) and Speech Processing (Yang
et al., 2021). Many of the evaluation datasets cited
in selected papers are no longer available. There-

fore, a repository of standard cases, proposed ap-
proaches, and evaluation procedures is necessary.
This is an important issue in the community and it
is essential to fill this gap.

6 Discussion on Action Taken

Our systematic review results show open issues
and research challenges for formalising a require-
ments. This research is part of MDENet project
and some actions are taken by the authors of this
paper to solve part of the issues. These actions are
summerised below:

* In order to strengthen the area of RF research,
we developed a DSL for NLP pipelines,
based on the SQLite grammar of GitHub -
antlr/grammars-v4/SQLite. This enables the
high level definition of NLP pipelines for RF,
independent of any particular NLP platform
such as NLTK or Apache OpenNLP. Common
RF processing such as POS-tagging, segmen-
tation, chunking, parsing can be specified. A
transformation from the DSL to Python was
defined in order to support implementation in
NLTK. Additionally, an OCL-based version of
the DSL was also defined, together with sup-
porting tools. The DSLs were evaluated by ap-
plying them to specify and implement typical
NLP pipeline tasks.

To provide a central point of reference for RF
research, we established a github repository
(RFr, 2022), which will hold links to state-of-
the-art research in the area, evaluation cases,
evaluation tools, and the results of evaluations.
The repository will be a resource for the RF
community and aims to improve the practical
application of RF research to real-world soft-
ware problems.

In order to compare the effectiveness of RF ap-
proaches, there needs to be an established set
of requirements statements that they can be ap-
plied to. We selected 25 cases of real-world
requirements statements in the format of user
stories, which reflect a diversity of linguistic
styles and of scale, and added these to the RF
repository.

To evaluate the results of applying RF ap-
proaches to the evaluation cases, we provide
tools to (i) compare the formalized models pro-
duced by an approach to manually constructed
reference models for the cases, to identify a
measure of similarity of these models; (ii)
compare the formalized models to the source


Formalised a Reference
= ™
Requirements
formalisation
process

Source
documents

Figure 9: Three Kinds of Evaluation Strategy for RF
Approaches

document, in order to check completeness of
the formalization; (ii1) to evaluate the internal
quality of the formalized model. Three kinds
of evaluation stratagy are presented in Figure
9. Example evaluations have been provided
for three RF approaches, evaluated on two user
story case studies.

7 Future Directions

In the following we discuss directions to complete
the current actions and further future work on RF.

* Generate a platform to guide the user for se-
lecting appropriate NLP techniques occurring
to their requirements. This will occur by con-
sidering more case studies and evaluating them
by applying the evaluating tools specified in
(RFg, ).

* We will develop the RF repository with
more example case studies, including ex-
amples of unstructured requirements  state-
ments/background documentation, evaluation
tools and evaluations, and publicise this in
MDE forums and invite contributions from RF
researchers.

* Replicability of experiments of applying NLP
for RF and reproducibility of their results are
currently under-addressed, and this is of par-
ticular concern for the RF community where
standard benchmarks and practice do not ex-
ist. To address this issue, we will propose a
shared task on the reproducibility of applying
NLP in RF which aims (i) to shed light on the
extent to which past evaluations are replicable
and reproducible, and (ii) to propose recom-
mendations regarding how evaluations can be

designed and reported to increase replicability
and reproducibility.

8 CONCLUSION

This research carried out a systematic survey of ex-
isting approaches for RF, including NLP and ML
approaches across a wide range of applications.
250 publications were examined, and 47 specific
publications were selected for deeper analysis. We
identified that:

¢ Heuristic NLP approaches are the most com-
mon RF technique in the research, primar-
ily operating on structured and semi-structured
data.

* Deep learning techniques are not widely-used,
instead classical ML techniques such as deci-
sion trees and Support Vector Machine (SVM)
are used in the surveyed studies.

¢ There is a lack of standard benchmark cases
for RF and therefore it is difficult to compare
the performance of different approaches.

REFERENCES

Datasets of 162 requirements and the corresponding
rcm-extractor output. https://github.com/
ABC-7/RequirementsExtraction/tree/main/
RealRequirement-Experiment./

Mendeley user story dataset. https://data.
mendeley.com/dataset/7zbk8zsd8y/1./. On-
line; accessed January 05, 2021.

Mendeley user story dataset. https://data.
mendeley.com/datasets/bw9md35c29/1. On-
line; accessed May 20, 2021.

Repository of state-of-the art requirements formal-
isation approaches. https://github.com/
kevinlano/RequirementsFormalisation.

(2022). Requirement formalisation using natural lan-
guage processing and machine learning repos-
itory. https://doi.org/10.5281/zenodo.
7337229/.

Abdelnabi, E. A., Maatuk, A. M., and Hagal, M.
(2021). Generating uml class diagram from natu-
ral language requirements: A survey of approaches
and techniques. In 2021 IEEE Ist International
Maghreb Meeting of the Conference on Sciences
and Techniques of Automatic Control and Com-
puter Engineering MI-STA, pages 288-293. IEEE.

Ahmed, I. A. O. and Daleel, M. E. E. (2020). Automated
use case diagram generation with non-functional
requirements using neural network. Jnternational
Journal of Applied Information Systems (IJAIS),
12:1-+4.


Ahmed, S., Ahmed, A., and Eisty, N. U. (2022). Auto-
matic transformation of natural to unified model-
ing language: A systematic review. arXiv preprint
arXiv:2204.00932.

Akay, H. and Kim, S.-G. (2021). Reading functional
requirements using machine learning-based lan-
guage processing. C/RP Annals, 70(1):139-142.

Al-Hroob, A., Imam, A. T., and Al-Heisa, R. (2018).
The use of artificial neural networks for extracting
actions and actors from requirements document.
Information and Software Technology, 101:1-15.

Alzayed, A. and Al-Hunaiyyan, A. (2021). A bird’s eye
view of natural language processing and require-
ments engineering. /nt. J. Adv. Comput. Sci. Appl.,
12(5):81-90.

BAJWA, I. S. (2014). A natural language processing
approach to generate SBVR and OCL, University
of Birmingham. PhD thesis, Ph. D. thesis.

Ben Abdessalem Karaa, W., Ben Azzouz, Z., Singh,
A., Dey, N., S. Ashour, A., and Ben Ghazala, H.
(2016). Automatic builder of class diagram (abcd):
an application of uml generation from functional
requirements. Software: Practice and Experience,
46(11):1443-1458.

Boetticher, G. (2007). The promise repository of empir-
ical software engineering data. http-//promisedata.
org/repository.

Brereton, P., Kitchenham, B. A., Budgen, D., Turner,
M., and Khalil, M. (2007). Lessons from applying
the systematic literature review process within the
software engineering domain. Journal of systems
and software, 80(4):571—583.

Burguen’o, L., Clariso’, R., Ge’rard, S., Li, S., and Cabot,
J. (2021). An nlp-based architecture for the auto-
completion of partial domain models. In /nterna-
tional Conference on Advanced Information Sys-
tems Engineering, pages 91—106. Springer.

Cepukenas, J., Lin, C., and Sleeman, D. (2015). Apply-
ing rule extraction & rule refinement techniques
to (blackbox) classifiers. In Proceedings of the
Sth international conference on knowledge cap-
ture, pages 1S.

Chen, M., Tworek, J., Jun, H., Yuan, Q., Pinto, H. P.
d. O., Kaplan, J., Edwards, H., Burda, Y., Joseph,
N., Brockman, G., et al. (2021). Evaluating large
language models trained on code. arXiv preprint
arXiv:2107.03374.

Dawood, O. S. et al. (2017). From requirements engi-
neering to uml using natural language processing—
survey study. European Journal of Industrial En-
gineering, 2(1):pp—44.

Deeptimahanti, D. K. and Babar, M. A. (2009). An au-
tomated tool for generating uml models from nat-
ural language requirements. In 2009 IEEE/ACM
International Conference on Automated Software
Engineering, pages 680-682. IEEE.

Elallaoui, M., Nafil, K., and Touahni, R. (2018). Auto-
matic transformation of user stories into uml use
case diagrams using nlp techniques. Procedia
computer science, 130:42-49.

Elmasry, I., Wassif, K., and Bayomi, H. (2021). Extract-
ing software design from text: A machine learning

approach. In 2021 Tenth International Conference
on Intelligent Computing and Information Systems
(ICICTS), pages 486-492. IEEE.

Ferrari, A., Spagnolo, G. O., and Gnesi, S. (2017). Pure:
A dataset of public requirements documents. In
2017 IEEE 25th International Requirements Engi-
neering Conference (RE), pages 502-505. IEEE.

Garm, L. (2016). Improving Effectiveness of User
Stories. http://www.staff.science.uu.nl/
~lucas00 1/concmodelinguserstories.zip/.
[Online; accessed June 01, 2017].

Goodfellow, I., Bengio, Y., and Courville, A. (2016).
Deep learning. MIT press.

Gu'nes,, T. and Aydemir, F. B. (2020). Automated goal
model extraction from user stories using nlp. In
2020 IEEE 28th International Requirements Engi-
neering Conference (RE), pages 382-387. IEEE.

Kashmira, P. and Sumathipala, S. (2018). Generat-
ing entity relationship diagram from requirement
specification based on nlp. In 2018 3rd Interna-
tional Conference on Information Technology Re-
search (ICITR), pages 14. IEEE.

Keele, S. et al. (2007). Guidelines for performing sys-
tematic literature reviews in software engineering.
Technical report, Technical report, ver. 2.3 ebse
technical report. ebse.

Klein, D. and Manning, C. D. (2003). Accurate unlexi-
calized parsing, in proceedings of the 41st meeting
of the association for computational linguistics.

Kulkami, A. and Shivananda, A. (2019). Natural lan-
guage processing recipes. Springer.

Lano, K., Yassipour-Tehrani, S., and Umar, M. (2021).
Automated requirements formalisation for agile
mde. In 2021 ACM/IEEE International Confer-
ence on Model Driven Engineering Languages
and Systems Companion (MODELS-C), pages
173-180. IEEE.

Li, R., Li, X., Chen, G., and Lin, C. (2020). Improv-
ing variational autoencoder for text modelling with
timestep-wise regularisation. In Proceedings of the
28th International Conference on Computational
Linguistics, pages 2381-2397.

M. Maatuk, A. and A. Abdelnabi, E. (2021). Generat-
ing uml use case and activity diagrams using nlp
techniques and heuristics rules. In International
Conference on Data Science, E-learning and In-
formation Systems 2021, pages 271-277.

Narawita, C. R. et al. (2017). Uml generator-use case
and class diagram generation from text require-
ments. The International Journal on Advances in
ICT for Emerging Regions, 10(1).

Nasiri, S., Rhazali, Y., and Lahmer, M. (2021). Towards
a generation of class diagram from user stories in
agile methods. In Advancements in Model-Driven
Architecture in Software Engineering, pages 135—
159. IGI Global.

Nguyen, T. H., Grundy, J., and Almorsy, M. (2014).
Guitar: An ontology-based automated require-
ments analysis tool. In 20/4 IEEE 22nd In-
ternational Requirements Engineering Conference
(RE), pages 315-316. IEEE.


Nguyen, T. H., Grundy, J., and Almorsy, M. (2015).
Rule-based extraction of goal-use case models
from text. In Proceedings of the 2015 10th Joint
Meeting on Foundations of Software Engineering,
pages 591-601.

Petersen, K., Vakkalanka, S., and Kuzniarz, L. (2015).
Guidelines for conducting systematic mapping
studies in software engineering: An update. In-
formation and software technology, 64:1-18.

Pohl, K. (2010). Requirements engineering: fundamen-
tals, principles, and techniques. Springer Publish-
ing Company, Incorporated.

Raharjana, I. K., Siahaan, D., and Fatichah, C. (2021).
User stories and natural language processing:
A systematic literature review. IEEE Access,
9:538 11-53826.

Rolland, C. and Proix, C. (1992). A natural language
approach for requirements engineering. In Jnter-
national conference on advanced information sys-
tems engineering, pages 257-277. Springer.

Ryan, K. (1993). The role of natural language in re-
quirements engineering. In /1993] Proceedings
of the IEEE International Symposium on Require-
ments Engineering, pages 240-242. TEEE.

Samuel, A. L. (1967). Some studies in machine
learning using the game of checkers. ii—recent
progress. IBM Journal of research and develop-
ment, 11(6):601-617.

Scho"n, E.-M., Winter, D., Escalona, M. J., and
Thomaschewski, J. (2017). Key challenges in agile
requirements engineering. In International Con-
ference on Agile Software Development, pages 37—
51. Springer, Cham.

Sedrakyan, G., Abdi, A., Van Den Berg, S. M., Veld-
kamp, B., and Van Hillegersberg, J. (2022). Text-
to-model (tetomo) transformation framework to
support requirements analysis and modeling. In
10th International Conference on Model-Driven
Engineering and Software Development, MODEL-
SWARD 2022, pages 129-136. SCITEPRESS.

Su, L., Duan, N., Cui, E., Ji, L., Wu, C., Luo, H., Liu,
Y., Zhong, M., Bharti, T., and Sacheti, A. (2021).
Gem: A general evaluation benchmark for multi-
modal tasks. arXiv preprint arXiv:2106.09889.

Tukur, M., Umar, S., and Hassine, J. (2021). Require-
ment engineering challenges: A systematic map-
ping study on the academic and the industrial per-
spective. Arabian Journal for Science and Engi-
neering, 46(4):3723-3748.

Vemuri, S., Chala, S., and Fathi, M. (2017). Automated
use case diagram generation from textual user re-
quirement documents. In 2017 IEEE 30th Cana-
dian Conference on Electrical and Computer En-
gineering (CCECE), pages 1-4. IEEE.

Yalla, P. and Sharma, N. (2015). Integrating natural lan-
guage processing and software engineering. /nter-
national Journal of Software Engineering and Its
Applications, 9(11):127-136.

Yang, S.-w., Chi, P.-H., Chuang, Y.-S., Lai, C.-I. J.,
Lakhotia, K., Lin, Y. Y., Liu, A. T., Shi, J., Chang,
X., Lin, G.-T., et al. (2021). Superb: Speech pro-

cessing universal performance benchmark. arXiv
preprint arXiv:2105.01051.

Zaki-Ismail, A., Osama, M., Abdelrazek, M., Grundy,
J., and Ibrahim, A. (2021). Arf: Automatic re-
quirements formalisation tool. In 202] IEEE 29th
International Requirements Engineering Confer-
ence (RE), pages 440-441. IEEE.

Zaki-Ismail, A., Osama, M., Abdelrazek, M., Grundy,
J., and Ibrahim, A. (2022). Rcm-extractor: an
automated nlp-based approach for extracting a
semi formal representation model from natural
language requirements. Automated Software En-
gineering, 29(1):1-33.

Zhao, L., Alhoshan, W., Ferrari, A., Letsholo, K. J.,
Ajagbe, M. A., Chioasca, E.-V., and Batista-
Navarro, R. T. (2020). Natural language
processing (nlp) for requirements engineering:
A systematic mapping study. arXiv preprint
arXiv:2004.01099.


Evaluation of Different NLP Approaches

Table 4

pamyonysun,

ea yst3ug]

Aouapuadag ad,
SOd
Surzmuayp
Summaj)

(10g “12 39 Assos)

uuopessuatiang
uuorstoal

pamynnsun,

TWoeaty

Burypreur wong

pea yst Uy

Aouapuadag ad,

woessapqy ug)

pamynnsun,

eFINDUOD pr0UEIS

SusLnoHT

(600c “eqeg pue tueyeunydaag) warség

weaiiep Auany
wresBeqp aseoasp)

pea yst Uy

soiouapuodag ada,
uoneZneUUa]
Sura
SOd
uoneztuayo

(igoz “tqeurepay “Vy pue ame WN)

onsunoy

Aaoys 2957)

‘Od
uoneZtuayo],
Bu

Gocog ‘mwapsy pur ‘seu.n9)

oueUMoAg,

pamjonns-1uog

lav Wea
lav 109g

PNPIONL
a INGOD propueas

Susenay{

quows3t
asinoo aufu

Aus 2987)

saouapuadep padi]
Surumuayg
Surumuayg
uonnyosax aquaraya10.)
‘SOd
uoneznrayo],

(1zoz “1839 UISeN)

ssoUjoa1H0,) woHPUUOJsURE |

pemonag

2288) SOd PuogUEIS

Susenay{

en10. 10

peo yst UR

am 953
SOd
uopezqEUa]

ZONEUDYOL,

(rlog “VaNrve)

pamynnsun,

SBSLNOH

CLL) stuawanmnbar year 291

(Wow) epowt
Suumxdes yuouromnbay

pe yst Uy

Aouopuadap-padky,
‘SOd

(ceoz “Je [eUsT-EEZ)

pamyonng
swag

onsunay{

(9102 ‘wuep) Aueduio gan

pow asvoasy)

Aaoys 295)

‘SO

pamyongsun,

PNPDAL
2A01D

Susenay{

3S pure Xyckins same,

Jepow urewog,

Asis 1987)

SOx
Jeaouar-pom-dorg

MOND
uopeneag

aanpn.ng
ynduy

Aaesqr 001,

ypoaddy

peer

and

ynduy

aN

ypawasry,



Evaluation of Different ML Approaches

Table 5

PA, p Sse,
paimsnnsu) orpms ensta lueeap asea9s warysaaug eueN)
paimjsnnsun uresfeyp asea asf sofeg an. en (coz “Wee MWe)
paimsnnsun aseoasn 1805) (stoz “1819 wasn)
2%
uotstatd paimanisun ao. waists WLV ureifeip asvoasn NN (3102 “1819 qoorH-1v)
wesng ps

VINOU

TONPION
VIN sweep TWA Aois 198, (czoz" 1819 wea YeIpIS)

paimjsnnsun

umsfiep wa.

Sunn] postarsdag

(s1oz“eedupewing pue emuysey)

paimsnnsun

saneu worsnju03,

uresfeip asvoos7)

YA. woddng

uonezUyOL

(ozoz 1Pa1ea pur pauryy)

umfep se],

ouopuodag ad&y
‘sod
BuzwoyoL
Sue},

(zor 1849 Aaseury a)

boa

parmonnsip, m nag isa Sauomse worsand) (rzoz wy pu key)
FInd aoedy
AN PIEpMS uesfeyp asna05
pounonas-ag anaiy tweateap sse13 aos 20571 san-uo1si90 soa (izoz “1 040)
amps
nda too. épmg ose nose nding anduy Ww fi yonEoy

